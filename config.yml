# Flexget (http://www.flexget.com) configuration file.
#
# Modified from:
# Jeff Wilson <jeff@jeffalwilson.com>
# https://github.com/atlanta800/dotfiles
# RegExr (http://www.gskinner.com/RegExr/) is a great tool for testing regexes

secrets: secretfile.yml

templates:
  global:

    email:
      from: c.giacofei.htpc@gmail.com
      to: c.giacofei@gmail.com
      smtp_username : c.giacofei.htpc
      smtp_password : BZWiMf1Vx1Q9o0V9EtGG
      smtp_host: smtp.gmail.com
      smtp_port: 587
      smtp_tls: yes

    transmission:
      host: '{{ secrets.transmission.host }}'
      port: 21772
      username: '{{ secrets.transmission.username }}'
      password: '{{ secrets.transmission.password }}'
      ratio: 1
      main_file_only: yes
      include_subs: yes

    free_space:
      path: /home/media/torrents
      space: 50000

    pathscrub: windows

    regexp:
      reject:
        - (s|d)ub(s|bed)?\b: {from: title}                    # Block any subbed/dubbed/etc videos
        - \b(duo|tri|quadri|tetra|penta)logy\b: {from: title} # Block series, only accept one at a time
        - \b3-?D\b: {from: title}                             # I don't have any 3D displays
        - \btrailer\b: {from: title}                          # I've gotten a few trailers that matched as movies. VERY annoying
        - \bR5\b: {from: title}                               # The following are poor quality types that somehow got through the quality
        - \bWEBSCR\b: {from: title}                           # features usually due to the title including a keyword like "720p" as well
        - \bscreener\b: {from: title}
        - \bTS\b: {from: title}
        - \bCam\b: {from: title}
        - '{C_P}': {from: title}                              # The following are groups with poor quality releases
        - TrTd TeaM: {from: title}
        - \[TNTVillage\]: {from: title}
        - \[facepalm\]: {from: title}
        - \bASAP\b: {from: title}

    torrent_alive:
      min_seeds: 10
      reject_for: 3 hours

    content_filter:
      require:
        - '*.avi'
        - '*.mkv'
        - '*.mpg'
        - '*.mp4'
        - '*.r0*'
        - '*.part0*'
      reject:
        - 'password.txt'
        - '*.wmv'

    domain_delay:
      bt-chat.com: 5 seconds
      torrentz.eu: 10 seconds
    # The Pirate Bay ssl certs always fail
    verify_ssl_certificates: no

    magnets: yes

  # This preset is a "global" preset for all TV-related tasks.
  # We keep all of the RSS feeds that list tv-related torrents here
  # as well as where to check existing shows.
  tv-global:
    include: [ input/tv_input.yml ]

    # Impose reasonable size constraints
    content_size:
      max: 5000
      min: 20
    # Prevent from downloading shows that were aquired manually
    # or are currently downloading
    exists_series:
      - '/media/media-drive/TV Shows/'
      - '/media/media-drive/TV Premieres/'
      - '/media/Iomega_HDD/Kids/TV Shows'
    # Look up info on TheTVDB.com to fill in extra info
    thetvdb_lookup: yes

  # These are the shows I regularly watch
  tv-my_shows:
    include: [ series.yml ]

    # Add accepted entries to Transmission, and queue them to the top
    set:
      path: '/home/cgiacofei/torrents/completed/completed/tv_shows/'
      queuetotop: yes

  ################################################
  # This is a preset for kids tv downloads.
  ################################################
  tv-andrea:
    # I've broken out my series lists into a seperate yml to clean up my config
    include: [ andrea_series.yml ]

    # Add accepted entries to Transmission, and queue them to the top
    set:
      path: '/home/cgiacofei/torrents/completed/completed/andrea_tv/'
      queuetotop: yes

  # I'm always up for new shows, but some genres I just can't stand. This
  # preset grabs all of the premieres except for some genres
  tv-premieres:
    # The entry has to have the tvdb_genres field so I can filter by it
    require_field:
      - tvdb_genres
      - tvdb_first_air_date
    # Make sure plenty of people are seeding it, otherwise it may not be that good
    torrent_alive:
      min_seeds: 50
    # Block these genres if they exist in the list of tvdb_genres at all
    regexp:
      reject:
        - talk show: {from: tvdb_genres}
        - game show: {from: tvdb_genres}
        - reality: {from: tvdb_genres}
        - children: {from: tvdb_genres}
        - home and garden: {from: tvdb_genres}
    if:
      # Block these genres only if they are the ONLY genre listed in
      # tvdb_genres. For example, this will not block a show that's both
      # "Comedy" and "Drama" but it will block a show that is just "Drama"
      - "tvdb_genres == ['Drama']": reject
      # Block premieres that weren't within the last 60 days
      - tvdb_first_air_date != None and tvdb_first_air_date < now - timedelta(days=60): reject

    # Accept all series permieres
    series_premiere:
      timeframe: 1 days
      quality: 720p+ hdtv+
    # Add to deluge, but don't queue to top (My_TV_Shows are more important)
    # and put in a different location
    set:
      path: '/home/cgiacofei/torrents/completed/tv_premieres/'
      queuetotop: no

  # If a premier was grabbed, keep on tracking it until the directory is (re)moved
  tv-premieres-track:
    configure_series:
      settings:
        target: 720p+ hdtv+
        timeframe: 3 days
        quality: webrip+
      from:
        listdir:
          - '/media/media-drive/TV Premieres/'

    set:
      path: '/home/cgiacofei/torrents/completed/tv_premieres/'
      queuetotop: no

  # This preset is a "global" preset for all movie-related tasks.
  # We keep all of the RSS feeds that list movie-related torrents here
  # as well as some other configurations.
  movies-global:
    interval: 1 hour # I have flexget run every half hour, that's really only necessary for TV Shows

    include: [ input/movie_input.yml ]

    # Some feeds might include TV Shows, ignore them
    regexp:
      reject:
        - s\d+e\d+: {from: title}
        - '\d{4}.\d{2}.\d{2}': {from: title}
        - \d+x\d+: {from: title}
        - \baac2: {from: title} # No 2 channel audio
    # Force proper_movies to run after regexp to avoid unnecessary imdb_lookup
    plugin_priority:
      if: 173
      proper_movies: 171
    # Impose reasonable size constraints
    content_size:
      max: 6000
      min: 1000
    imdb_lookup: yes
    # A Rotten Tomatoes API key is set in my private config, but I'm leaving
    # this here for clarity and completeness.
    # rottentomatoes_lookup: yes
    seen_movies: strict # Don't download movies we've already seen
    # Check for already downloaded or currently downloading movies
    exists_movie:
      - /media/media-drive/Movies/
      - /media/Iomega-HDD/Kids/Movies/
    # Download propers, since they will have the same content_filename,
    # lower/non-propers will be overwritten
    proper_movies: yes
    set:
      path: '/home/cgiacofei/torrents/completed/movies/'

  ################################################
  # This is a preset for kids movie downloads.
  ################################################
  movies-andrea:
    interval: 1 hour # I have flexget run every half hour, that's really only necessary for TV Shows

    include: [ input/movie_input.yml ]

    # Some feeds might include TV Shows, ignore them
    regexp:
      reject:
        - s\d+e\d+: {from: title}
        - '\d{4}.\d{2}.\d{2}': {from: title}
        - \d+x\d+: {from: title}
        - \baac2: {from: title} # No 2 channel audio
    # Force proper_movies to run after regexp to avoid unnecessary imdb_lookup
    plugin_priority:
      if: 174
      proper_movies: 171
    # Impose reasonable size constraints
    content_size:
      max: 6000
      min: 200
    imdb_lookup: yes
    seen_movies: strict # Don't download movies we've already seen

    # Check for already downloaded or currently downloading movies
    exists_movie:
      - /media/media-drive/Movies/
      - /media/Iomega-HDD/Kids/Movies/
    # Download propers, since they will have the same content_filename,
    # lower/non-propers will be overwritten
    proper_movies: yes
    set:
      path: '/home/cgiacofei/torrents/completed/andrea_movies/'

  # Keep all the discover settings in one place
  movies-discover:
    discover:
      from:
        - flexget_archive: yes
        - torrentz:
            reputation: verified
            extra_terms: "movie* hd"
        - piratebay:
            category: 'highres movies'
            sort_by: seeds
      what: [ filler: yes ]

  # This preset runs feeds through my very specific custom filter
  movies-auto:
    interval: 2 hours # run less often since we'll be manuall searching sites
    my_movie_filter: yes
    template: movies-discover
    discover:
      from: [ filler: yes ]
      what:
        - rottentomatoes_list:
            dvds:
              - top_rentals
              - new_releases
    set:
      queuetotop: no

  # This preset uses the movie queue to find movies from various sources
  movies-queued:
    movie_queue: yes
    template: movies-discover
    discover:
      from: [ filler: yes ]
      what:
        - emit_movie_queue: yes

# This is where we pull everything together
tasks:
  #--------------------------------------------------------------------------------#
  # Use a local folder (synced with Dropbox) as a source                           #
  # I can drop torrents in this folder and they are synced with Dropbox, always    #
  # accepted, then the original file is deleted                                    #
  #--------------------------------------------------------------------------------#
  Local_Torrents-TV:
    priority: 1
    template:
      - tv-global
      - tv-my_shows
    disable_builtins: [seen, seen_info_hash]
    disable_plugin:
      - inputs
      - exists_series
      - regexp
      - content_size
      - torrent_alive
    all_series:
      parse_only: yes
    plugin_priority:
      exec: 0
    listdir: /home/media/Dropbox/torrents/TV
    exec:
      on_output:
        for_accepted: rm '/home/media/Dropbox/torrents/TV/{{title}}.torrent'
    accept_all: yes

  # Same as above but for movies
  Local_Torrents-Movies:
    priority: 2
    template:
      - movies-global
    disable_builtins: [seen, seen_info_hash]
    disable_plugin:
      - inputs
      - exists_movie
      - seen_movies
      - regexp
      - content_size
      - torrent_alive
      - interval
    # Mark movies as seen
    movie_queue: yes
    plugin_priority:
      exec: 0
    listdir: /home/media/Dropbox/torrents/Movies
    exec:
      on_output:
        for_accepted: rm '/home/media/Dropbox/torrents/Movies/{{title}}'
    accept_all: yes

  Local_Torrents-TV_Andrea:
    priority: 3
    template:
      - tv-global
      - tv-andrea
    disable_builtins: [seen, seen_info_hash]
    disable_plugin:
      - inputs
      - exists_series
      - regexp
      - content_size
      - torrent_alive
    all_series:
      parse_only: yes
    plugin_priority:
      exec: 0
    listdir: /home/media/Dropbox/torrents/TV_Andrea
    exec:
      on_output:
        for_accepted: rm '/home/media/Dropbox/torrents/TV_Andrea/{{title}}.torrent'
    accept_all: yes

  Local_Torrents-Movies_Andrea:
    priority: 4
    template:
      - movies-andrea
    disable_builtins: [seen, seen_info_hash]
    disable_plugin:
      - inputs
      - exists_movie
      - seen_movies
      - regexp
      - content_size
      - torrent_alive
      - interval
    # Mark movies as seen
    movie_queue: yes
    plugin_priority:
      exec: 0
    listdir: /home/media/Dropbox/torrents/Movies_Andrea
    exec:
      on_output:
        for_accepted: rm '/home/media/Dropbox/torrents/Movies_Andrea/{{title}}'
    accept_all: yes

  #--------------------------------------------------------------------------------#
  # All of the TV-related tasks pull in the tv-global preset, this gives           #
  # all of the necessary rss sources and a few extra configs                       #
  #--------------------------------------------------------------------------------#
  My_TV_Shows:
    priority: 10
    template:
      - tv-global
      - tv-my_shows
    series:
      settings:
        Best:
          target: 720p+ hdtv+
          timeframe: 5 days
          quality: 720p+ dvdscr+
        Better:
          target: 720p+ dvdscr+
          timeframe: 3 days
          quality: 480p+ webrip+
        Average:
          target: webrip+
          timeframe: 12 hours
          quality: preair+

  Andrea_TV_Shows:
    priority: 12
    template:
      - tv-global
      - tv-andrea
    series:
      settings:
        Best:
          target: 720p+ hdtv+
          timeframe: 5 days
          quality: 720p+ dvdscr+
        Better:
          target: 720p+ dvdscr+
          timeframe: 3 days
          quality: 480p+ webrip+
        Average:
          target: webrip+
          timeframe: 12 hours
          quality: preair+

  #--------------------------------------------------------------------------------#
  # Movie download tasks                                                           #
  #--------------------------------------------------------------------------------#

  # This task queues all of the movies in my IMDB watchlist
  IMDB_Movie_Queue:
    priority: 100 # Always run before My_Movies task
    template: no_global
    interval: 2 hours
    imdb_list:
      user_id: ur16715479
      list: watchlist
      # auto_remove: [ accepted, rejected ] # keep my watchlist clean
    accept_all: yes
    queue_movies: yes

  # The next two tasks download the queue from the previous task effectively implementing
  # a 2 day timeframe for 1080p movies, then falls back to 720p
  My_Movies-1080p:
    priority: 110
    template:
      - movies-global
      - movies-queued
    quality: 1080p+ bluray+ h264+ dtshd|dts|dd5.1

  My_Movies-720p:
    priority: 120
    template:
      - movies-global
      - movies-queued
    quality: 720p+ webdl+ xvid+ dtshd|dts|dd5.1
    torrent_alive:
      min_seeds: 5
    delay: 7 days # Wait 7 days for a 1080p movie before trying downloading 720p


  # These task implement the movies-auto preset
  Auto_Movies-1080p:
    priority: 130
    quality: 1080p+ bluray+ h264+ dtshd|dts|dd5.1
    template:
      - movies-global
      - movies-auto

  Auto_Movies-720p:
    priority: 140
    quality: 720p+ dvdrip+ xvid+ dtshd|dts|dd5.1
    template:
      - movies-global
      - movies-auto
    delay: 7 days # Wait 7 days for a 1080p movie before trying downloading 720p


  # Task for the tv-premieres plugin
  Series_Premieres:
    priority: 40
    template:
      - tv-global
      - tv-premieres

  # Task for the tv-premieres-track plugin
  Series_Premieres_Track:
    priority: 50
    template:
      - tv-global
      - tv-premieres-track

  # Cleans movies from the movie queue that we already have
  Clean_Movie_Queue:
    interval: 1 week
    template: no_global
    accept_all: yes
    listdir:
      - /media/media-drive/Movies/
    movie_queue: yes

  # Clear transmission
  Clear_Torrents:
    clean_transmission:
      host: '{{ secrets.transmission.host }}'
      port: 21772
      username: '{{ secrets.transmission.username }}'
      password: '{{ secrets.transmission.password }}'
      finished_for: 3 hours
      min_ratio: 1
      delete_files: yes
