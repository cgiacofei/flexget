secrets: secretfile.yml

schedules:
  # Local torrents
  - tasks: 'Local_Torrents*'
    interval:
      minutes: 15

  # Tracked TV shows
  - tasks: [trakt_tv, trakt_kids, TV_Premieres_Track]
    interval:
      minutes: 30

  # New TV premieres
  - tasks: 'TV_Premieres'
    interval:
      hours: 1

  # Movies
  - tasks: [populate_movies, trakt_movies-1080p, trakt_movies-720p]
    interval:
      hours: 2

  # Maintainence
  - tasks: 'Clear_Torrents'
    interval:
      hours: 1

  - tasks: 'Clean_Movie_Queue'
    interval:
      days: 1

  # Sort Files
  - tasks: [tv_sorting, tv_premiere_sorting, movie_sorting]
    interval:
      minutes: 30

templates:
  global:

    email:
      template: html
      from: c.giacofei.htpc@gmail.com
      to: c.giacofei@gmail.com
      smtp_username : '{{ secrets.gmail.smtp_username }}'
      smtp_password : '{{ secrets.gmail.smtp_password }}'
      smtp_host: smtp.gmail.com
      smtp_port: 587
      smtp_tls: yes

    transmission:
      host: '{{ secrets.transmission.host }}'
      port: 21772
      username: '{{ secrets.transmission.username }}'
      password: '{{ secrets.transmission.password }}'
      ratio: 1
      main_file_only: yes
      skip_files:
        - '*.nfo'
        - '*.sfv'
        - '*[sS]ample*'
        - '*.txt'
      include_subs: yes

    free_space:
      path: '{{ secrets.torrents.root }}'
      space: 20000

    pathscrub: windows

    regexp:
      reject:
        - (s|d)ub(s|bed)?\b: {from: title}                    # Block any subbed/dubbed/etc videos
        - \b(duo|tri|quadri|tetra|penta)logy\b: {from: title} # Block series, only accept one at a time
        - \b3-?D\b: {from: title}                             # I don't have any 3D displays
        - \btrailer\b: {from: title}                          # I've gotten a few trailers that matched as movies. VERY annoying
        - \bR5\b: {from: title}                               # The following are poor quality types that somehow got through the quality
        - \bWEBSCR\b: {from: title}                           # features usually due to the title including a keyword like "720p" as well
        - \bscreener\b: {from: title}
        - \bTS\b: {from: title}
        - \bCam\b: {from: title}
        - '{C_P}': {from: title}                              # The following are groups with poor quality releases
        - TrTd TeaM: {from: title}
        - \[TNTVillage\]: {from: title}
        - \[facepalm\]: {from: title}
        - \bASAP\b: {from: title}

    torrent_alive:
      min_seeds: 10
      reject_for: 1 day

    content_filter:
      require:
        - '*.avi'
        - '*.mkv'
        - '*.mpg'
        - '*.mp4'

      reject:
        - 'password.txt'
        - '*.wmv'
        - '*.r0*'
        - '*.part0*'

      require_mainfile: yes

    domain_delay:
      bt-chat.com: 5 seconds
      torrentz.eu: 10 seconds

    # The Pirate Bay ssl certs always fail
    verify_ssl_certificates: no

    # Need to reject magnets in order for content filtering to work
    magnets: no

################################################################################
#
# Global Settings
#
################################################################################
  tv-global:
    include: [ input/tv_input.yml ]

    # Impose reasonable size constraints
    content_size:
      max: 5000
      min: 20

    # Prevent from downloading shows that were aquired manually
    exists_series:
      - '{{ secrets.directories.tv_shows }}'
      - '{{ secrets.directories.tv_premieres }}'
      - '{{ secrets.directories.kids_tv }}'

    # Look up info on TheTVDB.com to fill in extra info
    thetvdb_lookup: yes

  movies-global:
    interval: 1 hour # I have flexget run every half hour, that's really only necessary for TV Shows

    include: [ input/movie_input.yml ]

    # Some feeds might include TV Shows, ignore them
    regexp:
      reject:
        - s\d+e\d+: {from: title}
        - '\d{4}.\d{2}.\d{2}': {from: title}
        - \d+x\d+: {from: title}
        - \baac2: {from: title} # No 2 channel audio

    # Impose reasonable size constraints
    content_size:
      max: 6000
      min: 1000
    trakt_lookup: yes
    imdb_lookup: no
    tmdb_lookup: no

    seen_movies: strict # Don't download movies we've already seen

    # Check for already downloaded or currently downloading movies
    exists_movie:
      #- '{{ secrets.directories.kids_movies }}'
      - '{{ secrets.directories.movies }}'

    trakt_remove:
      username: '{{ secrets.trakt.username }}'
      password: '{{ secrets.trakt.password }}'
      list: watchlist

  queue-movies:
    parsing:
      movie: guessit
    movie_queue: accept

    disable:
      - seen_movies
    discover:
      what:
        - emit_movie_queue: yes

      from:
        - flexget_archive: [movies]

        - kat:
            category: movies
            verified: yes
        - torrentz:
            reputation: verified
            extra_terms: "movie* hd"

################################################################################
#
# Settings for finding and tracking series premieres
#
################################################################################
  tv-premieres:
    # The entry has to have the tvdb_genres field so I can filter by it
    require_field:
      - tvdb_genres
      - tvdb_first_air_date
    # Make sure plenty of people are seeding it, otherwise it may not be that good
    torrent_alive:
      min_seeds: 50
    # Block these genres if they exist in the list of tvdb_genres at all
    regexp:
      reject:
        - talk show: {from: tvdb_genres}
        - game show: {from: tvdb_genres}
        - reality: {from: tvdb_genres}
        - children: {from: tvdb_genres}
        - home and garden: {from: tvdb_genres}
        - documentary: {from: tvdb_genres}
        - travel: {from: tvdb_genres}
    if:
      # Block show if genres contains only 'Drama'
      - "tvdb_genres == ['Drama']": reject
      # Block premieres that weren't within the last 60 days
      - tvdb_first_air_date != None and tvdb_first_air_date < now - timedelta(days=60): reject

    # Accept all series permieres
    series_premiere:
      timeframe: 1 days
      quality: 720p+ hdtv+

    set:
      path: '/home/cgiacofei/files/completed/tv_premieres/{{ series_name }}/'
      content_filename: '{{ series_name }} - S{{ series_season|pad(2) }}xE{{ series_episode|pad(2) }}'
      queuetotop: no

  # If a premier was grabbed, keep on tracking it until the directory is (re)moved
  tv-premieres-track:
    configure_series:
      settings:
        target: 720p+ hdtv+
        timeframe: 3 days
        quality: webrip+
      from:
        listdir:
          - '{{ secrets.directories.tv_premieres }}'

    set:
      path: '/home/cgiacofei/files/completed/tv_premieres/{{ series_name }}/'
      content_filename: '{{ series_name }} - S{{ series_season|pad(2) }}xE{{ series_episode|pad(2) }}'
      queuetotop: no

  # Global settings for local torrent downloads
  local-torrents:
    disable:
      - seen
      - seen_info_hash
      - inputs
      - exists_series
      - regexp
      - content_size
      - torrent_alive

    plugin_priority:
      exec: 0

    exec:
      on_output:
        for_accepted: rm '{{location}}'
    accept_all: yes


tasks:
################################################################################
#
# TV Tasks
#
################################################################################

  #-----------------------------------------------------------------------------
  # Main TV show download task
  #-----------------------------------------------------------------------------
  trakt_tv:
    priority: 10
    parsing:
      series: internal
    set:
      path: '/home/cgiacofei/files/completed/tv_shows/'
      content_filename: '{{ series_name }} - S{{ series_season|pad(2) }}xE{{ series_episode|pad(2) }}'
      queuetotop: yes
    template:
      - tv-global
    configure_series:
      from:
        trakt_list:
          username: '{{ secrets.trakt.username }}'
          list: following
          type: shows
      settings:
        target: 720p+ hdtv+
        quality: 720p+ dvdscr+

  #-----------------------------------------------------------------------------
  # Kids TV download task
  #-----------------------------------------------------------------------------
  trakt_kids:
    priority: 20
    parsing:
      series: internal
    set:
      path: '/home/cgiacofei/files/completed/andrea_tv/'
      content_filename: '{{ series_name }} - S{{ series_season|pad(2) }}xE{{ series_episode|pad(2) }}'
      queuetotop: yes
    template:
      - tv-global
    configure_series:
      from:
        trakt_list:
          username: '{{ secrets.trakt.username }}'
          list: kids_tv
          type: shows
      settings:
        target: webrip+
        quality: preair+

  #-----------------------------------------------------------------------------
  # Tasks for TV premieres
  #-----------------------------------------------------------------------------
  TV_Premieres:
    priority: 40
    parsing:
      series: internal
    template:
      - tv-global
      - tv-premieres

  TV_Premieres_Track:
    priority: 50
    parsing:
      series: internal
    template:
      - tv-global
      - tv-premieres-track

################################################################################
#
# Movie Tasks
#
################################################################################
  populate_movies:
    priority: 100
    template: no_global
    interval: 2 hours
    trakt_list:
      username: '{{ secrets.trakt.username }}'
      list: watchlist
      type: movies
    no_entries_ok: yes
    accept_all: yes
    movie_queue: add

  #-----------------------------------------------------------------------------
  # Main movie download task
  #-----------------------------------------------------------------------------
  trakt_movies-1080p:
    priority: 110
    imdb_lookup: yes
    template:
      - movies-global
      - queue-movies

    quality: 1080p+ bluray+ h264+

    set:
      path: '/home/cgiacofei/files/completed/movies/'
      content_filename: '{{ movie_name }} {{movie_year}}'
      queuetotop: yes

  # Delay sets a window to allow for higher resolution videos
  trakt_movies-720p:
    priority: 120
    imdb_lookup: yes
    template:
      - movies-global
      - queue-movies

    quality: 720p+ webdl+ xvid+

    set:
      path: '/home/cgiacofei/files/completed/movies/'
      content_filename: '{{ movie_name }} {{movie_year}}'
      queuetotop: yes

    delay: 2 days

################################################################################
#
# Local torrent file downloads
#
################################################################################
  Local_Torrents-TV:
    priority: 1
    template:
      - tv-global
      - local-torrents

    listdir: '{{ secrets.torrents.tv }}'
    set:
      path: '/home/cgiacofei/files/completed/tv_shows/'
      content_filename: '{{ series_name }} - S{{ series_season|pad(2) }}xE{{ series_episode|pad(2) }}'

    all_series:
      parse_only: yes

  # Same as above but for movies
  Local_Torrents-Movies:
    priority: 2
    template:
      - movies-global
      - local-torrents

    listdir: '{{ secrets.torrents.movies }}'
    set:
      path: '/home/cgiacofei/files/completed/movies/'

    movie_queue: remove

  Local_Torrents-TV_Andrea:
    priority: 3
    template:
      - tv-global
      - local-torrents

    listdir: '{{ secrets.torrents.kids_tv }}'
    set:
      path: '/home/cgiacofei/files/completed/andrea_tv/'
      content_filename: '{{ series_name }} - S{{ series_season|pad(2) }}xE{{ series_episode|pad(2) }}'

    all_series:
      parse_only: yes

  Local_Torrents-Movies_Andrea:
    priority: 4
    template:
      - movies-global
      - local-torrents

    listdir: '{{ secrets.torrents.kids_movies }}'
    set:
      path: '/home/cgiacofei/files/completed/andrea_movies/'

    movie_queue: remove

################################################################################
#
# File sorting
#
################################################################################

  tv_sorting:
    template: no_global
    find:
      path: '{{ secrets.downloads.tv_shows }}'
      regexp: '.*\.(mkv|mp4|avi|mp4)$'
      recursive: yes
    seen: local
    configure_series:
      from:
        trakt_list:
          username: '{{ secrets.trakt.username }}'
          list: following
          type: shows
      settings:
        parse_only: yes
    regexp:
      reject:
        - sample
    require_field: series_name
    accept_all: yes
    move:
      to: '/home/cgiacofe/flextest/storage/tv/{{ series_name }}/Season {{series_season}}/'
      filename: '{{ series_name }} - S{{ series_season|pad(2) }}xE{{ series_episode|pad(2) }}'
    exec:
      allow_background: yes
      auto_escape: yes
      on_exit:
        phase: "/bin/rm -rf {{ secrets.downloads.tv_shows }}/*"

  tv_premiere_sorting:
    template: no_global
    find:
      path: '{{ secrets.downloads.tv_premieres }}'
      regexp: '.*\.(mkv|mp4|avi|mp4)$'
      recursive: yes
    seen: local
    configure_series:
      from:
        listdir:
          - '{{ secrets.downloads.tv_premieres }}'
      settings:
        parse_only: yes
    regexp:
      reject:
        - sample
    require_field: series_name
    accept_all: yes
    move:
      to: '/home/cgiacofe/flextest/storage/tv/{{ series_name }}/Season {{series_season}}/'
      filename: '{{ series_name }} - S{{ series_season|pad(2) }}xE{{ series_episode|pad(2) }}'
    exec:
      allow_background: yes
      auto_escape: yes
      on_exit:
        phase: "/bin/rm -rf {{ secrets.downloads.tv_premieres }}/*"

  movie_sorting:
    template: no_global
    imdb_required: yes
    find:
      path: '{{ secrets.downloads.movies }}'
      regexp: '.*\.(mkv|mp4|avi|mp4)$'
      recursive: yes
    require_field: imdb_name
    accept_all: yes
    move:
      to: '/home/cgiacofe/flextest/storage/movies/{{imdb_name}} ({{imdb_year}})'
      filename: '{{imdb_name}} ({{imdb_year}})'
      clean_source: 300

################################################################################
#
# Maintainence Tasks
#
################################################################################
  Clean_Movie_Queue:
    template: no_global
    disable:
      - seen
      - seen_info_hash
      - seen_movies
    accept_all: yes
    listdir:
      - '{{ secrets.directories.movies }}'
      #- '{{ secrets.directories.kids_movies }}'

    imdb_lookup: yes
    require_field: [movie_name, movie_year]
    movie_queue: accept

    trakt_remove:
      username: '{{ secrets.trakt.username }}'
      password: '{{ secrets.trakt.password }}'
      list: watchlist

  Clear_Torrents:
    clean_transmission:
      host: '{{ secrets.transmission.host }}'
      port: 21772
      username: '{{ secrets.transmission.username }}'
      password: '{{ secrets.transmission.password }}'
      finished_for: 24 hours
      delete_files: yes

    disable: details
